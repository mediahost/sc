services:
	doctrine: Kdyby\Doctrine\DI\OrmExtension
	annotations: Kdyby\Annotations\DI\AnnotationsExtension

	# Facades
	- {class: App\Model\Facade\RoleFacade, inject: yes}
	- {class: App\Model\Facade\UserFacade, inject: yes}
	- {class: App\Model\Facade\CompanyFacade, inject: yes}
	- {class: App\Model\Facade\SkillFacade, inject: yes}
	- {class: App\Model\Facade\CvFacade, inject: yes}
	- {class: App\Model\Facade\JobFacade, inject: yes}
	-
		class: App\Model\Facade\CommunicationFacade
		setup:
			- $onNewMessage([@App\Model\Service\NotificationService::processNewMessageNotifications])

	# Services
	-
		class: App\Model\Service\NotificationService
		arguments: [@App\Extensions\Settings\Model\Service\ModuleService::getModuleSettings('notifications')]

	# Storages
	- {class: App\Model\Storage\SignUpStorage, inject: yes}

	# Events subscribers
	treeSubscriber:
		class: Knp\DoctrineBehaviors\ORM\Tree\TreeSubscriber
		arguments: [Knp\DoctrineBehaviors\Reflection\ClassAnalyzer(), FALSE, 'Knp\DoctrineBehaviors\Model\Tree\Node']
		tags: [kdyby.subscriber]
	timestampSubscriber:
		class: Knp\DoctrineBehaviors\ORM\Timestampable\TimestampableSubscriber
		arguments: [Knp\DoctrineBehaviors\Reflection\ClassAnalyzer(), FALSE, 'Knp\DoctrineBehaviors\Model\Timestampable\Timestampable']
		tags: [kdyby.subscriber]
	loggableSubscriber:
		class: Knp\DoctrineBehaviors\ORM\Loggable\LoggableSubscriber
		arguments: [Knp\DoctrineBehaviors\Reflection\ClassAnalyzer(), FALSE, ['Tracy\Debugger', 'log']]
		tags: [kdyby.subscriber]
